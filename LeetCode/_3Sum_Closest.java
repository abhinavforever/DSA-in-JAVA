package LeetCode;

public class _3Sum_Closest {
    public static int threeSumClosest(int[] nums, int target) {
        int n=nums.length;
        int sum=0;
        int min_diff=Integer.MAX_VALUE;
        for(int i=0;i<n;i++){
            for(int j=1;j<n;j++){
                for(int k=2;k<n;k++){
                    if(i!=j && j!=k && i!=k){
                        int s=nums[i]+nums[j]+nums[k];
                        int diff=Math.abs(target-s);
                        if(diff<min_diff){
                            sum=s;
                            min_diff=diff;
                        }
                    }
                }
            }
        }
        return sum;
    }
    public static void main(String[] args) {

        int nums1[]={-1,2,1,-4};
        System.out.println(threeSumClosest(nums1,1));

        int nums2[]={0,0,0};
        System.out.println(threeSumClosest(nums2,1));

        int nums[]={534,-12,690,-335,968,-755,13,916,380,253,-712,425,-518,763,586,-877,-150,-525,680,417,-459,-970,676,-648,276,934,396,-930,125,-559,-44,65,778,-346,-138,479,949,-924,75,-729,309,452,-564,963,962,-568,331,748,-979,242,209,445,475,827,826,623,-990,283,-760,62,-369,-93,-662,956,931,466,69,43,979,726,149,-380,282,-946,627,-513,-765,9,37,966,-253,642,-545,-309,98,-770,-682,-894,-719,-450,-30,-505,435,-494,377,576,904,232,991,112,589,230,-587,-653,554,-937,-358,338,897,349,735,741,776,814,83,401,-498,-189,291,-136,670,373,890,840,847,77,-914,-179,564,236,875,-720,612,836,-856,617,761,-576,-777,367,-981,-752,-743,-264,980,-626,337,-560,188,-35,874,703,843,381,-14,-195,858,-978,-796,297,974,-235,877,-936,-48,441,-707,152,-379,322,-132,706,919,29,544,-297,231,-895,667,78,941,54,-651,520,-645,862,588,278,-115,-501,261,-669,-152,-785,817,-320,-935,295,873,-42,-339,4,-18,-314,954,117,25,-229,652,-453,-906,-377,-251,308,-118,-194,774,233,-509,-668,504,419,310,721,46,-472,-258,-245,140,-572,-820,-705,339,736,-601,450,824,878,-643,-400,247,-441,830,-783,251,-144,-561,-467,258,-647,-97,-112,906,275,49,352,913,-938,733,174,522,73,-410,-680,649,-786,-326,527,989,156,499,288,-736,-345,167,503,629,136,-766,-974,-976,356,-265,-942,-247,-238,285,717,994,-390,12,-170,-901,314,-102,-684,116,-759,-540,-287,431,-281,-363,-757,292,-637,952,176,2,-228,94,81,355,783,-962,911,-62,566,-835,-233,-257,320,720,-778,265,415,905,357,-74,-848,923,-163,-918,738,104,643,-619,625,-489,-982,-931,72,-155,-111,-733,100,-604,920,-162,-166,498,169,585,-168,-464,759,-63,616,404,502,565,38,-243,-539,-96,-753,-670,398,-452,387,-240,494,-779,-675,907,-176,318,121,-700,-947,-246,804,596,158,-484,631,199,478,-861,-156,399,-284,984,-322,-500,-988,-656,241,-496,-53,-772,-833,-686,-65,-126,-476,-422,491,142,235,-865,-923,945,-727,-319,-812,-188,-89,545,-534,-911,-928,-713,-671,484,-695,-741,-679,280,-891,-621,-527,-652,-644,225,-693,137,953,-905,-72,-9,-127,246,-758,449,501,-646,71,345,-654,-473,402,319,912,883,90,-357,-871,-135,443,344,444,-851,535,-214,462,85,107,-355,323,929,405,-728,511,-23,-13,133,570,-949,-333,-103,-630,613,-793,87,461,36,689,-405,561,312,710,-76,917,-696,-890,729,186,-164,-128};
         System.out.println(threeSumClosest(nums,8501));
    }
}